{"ast":null,"code":"var _jsxFileName = \"D:\\\\swathi folder\\\\mern-auth-with-frontend\\\\mern-auth\\\\client\\\\src\\\\pages\\\\demoTimesheet.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { submit } from \"../actions/authActions\";\nimport { weekData } from \"../actions/authActions\";\nimport moment from 'moment';\nimport Moment from 'react-moment'; //bootstrap import\n\nimport { Button, Dropdown, Table } from 'react-bootstrap'; //import './App.css';\n\nimport { Row } from 'primereact/row'; // prime ng react table \n\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { InputText } from 'primereact/inputtext'; //css for prime react.\n\nimport 'primereact/resources/themes/saga-blue/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\n\nclass demoTimesheet extends Component {\n  constructor() {\n    super();\n\n    this.onTargetSelect = function (item) {\n      this.state.weekObj = this.state.weekObj ? [] : '';\n      let newDate = moment().year() + '-' + (item + 1) + '-01';\n      let weeks = [];\n      this.state.startDate = moment('' + newDate).startOf('week').format('YYYY-MM-DD');\n      this.state.endDate = moment('' + newDate).endOf('month').format('YYYY-MM-DD');\n      console.log('weeksaaaa:', this.state.startDate, this.state.endDate);\n\n      while (this.state.startDate <= this.state.endDate) {\n        weeks.push( /*#__PURE__*/React.createElement(Dropdown.Item, {\n          onSelect: event => this.selectedWeek(event),\n          eventKey: this.state.startDate,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 24\n          }\n        }, this.state.startDate));\n        this.state.startDate = moment(this.state.startDate).add(7, 'days').format('YYYY-MM-DD');\n      }\n\n      console.log(weeks);\n      this.setState({\n        weekObj: weeks\n      });\n    };\n\n    this.selectedWeek = function (week) {\n      console.log('ll', week, this.state.columns, moment(week).week());\n      this.setState({\n        selectedWeek: moment(week).week()\n      });\n      let respose = [];\n      let emptyRow = {\n        \"Sunday\": \"0\",\n        \"Monday\": \"0\",\n        \"Tuesday\": \"0\",\n        \"Wednesday\": \"0\",\n        \"Thursday\": \"0\",\n        \"Friday\": \"0\",\n        \"Saturday\": \"0\"\n      };\n      let data = week;\n      let i = 1;\n      let days = [{\n        \"Sunday\": \"\",\n        \"Monday\": \"\",\n        \"Tuesday\": \"\",\n        \"Wednesday\": \"\",\n        \"Thursday\": \"\",\n        \"Friday\": \"\",\n        \"Saturday\": \"\"\n      }];\n      days[0]['Sunday'] = data;\n      respose.push(data);\n      let dynamicColumns = []; //days.push(data);\n      // row.dataField = ''+data;\n      // row.text = ''+data; \n      // this.state.columns[0] = row;\n\n      while (i <= 6) {\n        let c = 1;\n        let dateString = moment(data).add(1, 'days').format('YYYY-MM-DD');\n        let dayString = moment(data).add(1, 'days').format('dddd');\n        respose.push(dateString);\n        days[0][dayString] = dateString;\n        console.log(days); // row.dataField = ''+daysString;\n        // row.text = ''+daysString; \n        // this.state.columns[c] = row;\n\n        data = moment(data).add(1, 'days').format('YYYY-MM-DD');\n        i++;\n        c++;\n      }\n\n      days[1] = emptyRow;\n      console.log('hehe11', days);\n      console.log('hehe', dynamicColumns);\n      this.setState({\n        products: days\n      }); // console.log('days', days, this.state.dayObj);\n    };\n\n    this.handleSelect = e => {\n      console.log(e); // setValue(e) \n    };\n\n    this.onKeyUpValue = e => {\n      console.log(\"ee\", e);\n\n      if (e.key === 'Enter') {\n        console.log('do validate', e);\n      }\n    };\n\n    this.onSubmit = e => {\n      const email = localStorage.getItem(\"userEmail\");\n      const data = {};\n      Object.keys(this.state.products[0]).forEach(element => {\n        let date = this.state.products[0][element];\n        data[date] = this.state.products[1][element];\n      });\n      let userData = {\n        data: data,\n        email: email,\n        selectedWeek: this.state.selectedWeek\n      };\n      const res = this.props.submit(userData);\n    };\n\n    this.onLoad = e => {\n      const email = localStorage.getItem(\"userEmail\");\n      let userData = {\n        email: email,\n        selectedWeek: this.state.selectedWeek\n      };\n      this.props.weekData(userData);\n    };\n\n    this.state = {\n      monthObj: {\n        January: 0,\n        Febraury: 1,\n        March: 2,\n        April: 3,\n        May: 4,\n        June: 5,\n        July: 6,\n        August: 7,\n        September: 8,\n        October: 9,\n        November: 10,\n        December: 11\n      },\n      weekObj: [],\n      tableObj: [],\n      dayObj: [],\n      startDate: \"\",\n      endDate: \"\",\n      optionItems: [],\n      value: '',\n      // start : moment([2020, 8 - 1]).startOf('month'), \n      // end : moment([2020, 8 - 1]).endOf('month'), \n      // nrofWeeks : moment.duration(end - start).weeks()\n      products: [],\n      header: [],\n      selectedWeek: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.keyPress = this.keyPress.bind(this); //let weeks = []; \n\n    this.state.optionItems = Object.keys(this.state.monthObj).map(item => /*#__PURE__*/React.createElement(Dropdown.Item, {\n      onSelect: () => this.onTargetSelect(this.state.monthObj[item]),\n      eventKey: this.state.monthObj.item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 79\n      }\n    }, \" \", item, \" \"));\n    console.log('this.props', this.props);\n  }\n\n  componentWillReceiveProps(props) {\n    let value = Object.values(props.auth.user.data);\n    let updateRow = {\n      \"Sunday\": value[0],\n      \"Monday\": value[1],\n      \"Tuesday\": value[2],\n      \"Wednesday\": value[3],\n      \"Thursday\": value[4],\n      \"Friday\": value[5],\n      \"Saturday\": value[6]\n    };\n    console.log('updateRow', updateRow);\n    this.state.products[1] = updateRow;\n  }\n\n  handleChange(e) {\n    this.setState({\n      value: e.target.value\n    });\n  }\n\n  keyPress(e, d) {\n    console.log(e, d);\n\n    if (e.keyCode == 13) {\n      console.log('value', e.target.value); // put the login here\n    }\n  }\n\n  inputTextEditor(productKey, props, field) {\n    return /*#__PURE__*/React.createElement(InputText, {\n      type: \"text\",\n      value: props.rowData[field],\n      onChange: e => this.onEditorValueChange(productKey, props, e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 16\n      }\n    });\n  }\n\n  codeEditor(productKey, props) {\n    console.log('code editor', productKey, props);\n    return this.inputTextEditor(productKey, props, 'code');\n  }\n\n  onEditorValueChange(productKey, props, value) {\n    let updatedProducts = [...props.value];\n    console.log('updatedProducts', updatedProducts, props);\n    updatedProducts[props.rowIndex][props.field] = value;\n    this.setState({\n      [`${productKey}`]: updatedProducts\n    });\n    console.log('as', this.state.products);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demoTimesheet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      className: \"margin15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"select-month\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }\n    }, \" Select Month\"), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }\n    }, \" \", this.state.optionItems, \" \")), /*#__PURE__*/React.createElement(Dropdown, {\n      className: \"margin15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"select-week\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }\n    }, \" Select Week\"), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 21\n      }\n    }, \" \", this.state.weekObj, \" \"), \" \"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      className: \"margin15\",\n      onClick: this.onLoad,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }\n    }, \"Load\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      className: \"margin15\",\n      onClick: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }\n    }, \"Selected week - \", this.state.selectedWeek), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card margin15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      value: this.state.products,\n      editMode: \"cell\",\n      className: \"editable-cells-table \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Column, {\n      field: \"Sunday\",\n      header: \"Sunday\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"Monday\",\n      header: \"Monday\",\n      editor: props => this.codeEditor('products', props),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"Tuesday\",\n      header: \"Tuesday\",\n      editor: props => this.codeEditor('products', props),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"Wednesday\",\n      header: \"Wednesday\",\n      editor: props => this.codeEditor('products', props),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"Thursday\",\n      header: \"Thursday\",\n      editor: props => this.codeEditor('products', props),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"Friday\",\n      header: \"Friday\",\n      editor: props => this.codeEditor('products', props),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"Saturday\",\n      header: \"Saturday\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\ndemoTimesheet.propTypes = {\n  weekData: PropTypes.func.isRequired,\n  submit: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired // TODO - made its as string from object\n\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nconsole.log(mapStateToProps);\nexport default connect(mapStateToProps, {\n  weekData,\n  submit\n})(withRouter(demoTimesheet)); // export default demoTimesheet;","map":{"version":3,"sources":["D:/swathi folder/mern-auth-with-frontend/mern-auth/client/src/pages/demoTimesheet.js"],"names":["React","Component","withRouter","PropTypes","connect","submit","weekData","moment","Moment","Button","Dropdown","Table","Row","DataTable","Column","InputText","demoTimesheet","constructor","onTargetSelect","item","state","weekObj","newDate","year","weeks","startDate","startOf","format","endDate","endOf","console","log","push","event","selectedWeek","add","setState","week","columns","respose","emptyRow","data","i","days","dynamicColumns","c","dateString","dayString","products","handleSelect","e","onKeyUpValue","key","onSubmit","email","localStorage","getItem","Object","keys","forEach","element","date","userData","res","props","onLoad","monthObj","January","Febraury","March","April","May","June","July","August","September","October","November","December","tableObj","dayObj","optionItems","value","header","handleChange","bind","keyPress","map","componentWillReceiveProps","values","auth","user","updateRow","target","d","keyCode","inputTextEditor","productKey","field","rowData","onEditorValueChange","codeEditor","updatedProducts","rowIndex","render","propTypes","func","isRequired","object","errors","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {\r\n    Component\r\n} from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { submit } from \"../actions/authActions\";\r\nimport { weekData } from \"../actions/authActions\";\r\nimport moment from 'moment';\r\nimport Moment from 'react-moment'; //bootstrap import\r\nimport {\r\n    Button,\r\n    Dropdown,\r\n    Table\r\n} from 'react-bootstrap'; //import './App.css';\r\n\r\nimport { Row } from 'primereact/row';\r\n\r\n\r\n\r\n// prime ng react table \r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { InputText } from 'primereact/inputtext';\r\n//css for prime react.\r\nimport 'primereact/resources/themes/saga-blue/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\n\r\n\r\nclass demoTimesheet extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            monthObj: {\r\n                January: 0,\r\n                Febraury: 1,\r\n                March: 2,\r\n                April: 3,\r\n                May: 4,\r\n                June: 5,\r\n                July: 6,\r\n                August: 7,\r\n                September: 8,\r\n                October: 9,\r\n                November: 10,\r\n                December: 11\r\n            },\r\n            weekObj: [],\r\n            tableObj: [],\r\n            dayObj: [],\r\n            startDate: \"\",\r\n            endDate: \"\",\r\n            optionItems: [],\r\n            value: '',\r\n            // start : moment([2020, 8 - 1]).startOf('month'), \r\n            // end : moment([2020, 8 - 1]).endOf('month'), \r\n            // nrofWeeks : moment.duration(end - start).weeks()\r\n\r\n            products: [],\r\n            header: [],\r\n            selectedWeek: ''\r\n\r\n\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.keyPress = this.keyPress.bind(this);\r\n        //let weeks = []; \r\n        this.state.optionItems = Object.keys(this.state.monthObj).map(item => < Dropdown.Item onSelect={\r\n            () => this.onTargetSelect(this.state.monthObj[item])\r\n        }\r\n            eventKey={\r\n                this.state.monthObj.item\r\n            } > {\r\n                item\r\n            } </Dropdown.Item>); console.log('this.props', this.props);\r\n    }\r\n\r\n\r\n    componentWillReceiveProps(props) {\r\n        let value = Object.values(props.auth.user.data);\r\n        let updateRow = {\r\n            \"Sunday\": value[0],\r\n            \"Monday\": value[1],\r\n            \"Tuesday\": value[2],\r\n            \"Wednesday\": value[3],\r\n            \"Thursday\": value[4],\r\n            \"Friday\": value[5],\r\n            \"Saturday\": value[6],\r\n        };\r\n        console.log('updateRow',updateRow)\r\n        this.state.products[1] = updateRow\r\n    }\r\n\r\n\r\n    onTargetSelect = function (item) {\r\n        this.state.weekObj = this.state.weekObj ? [] : '';\r\n        let newDate = moment().year() + '-' + (item + 1) + '-01';\r\n        let weeks = [];\r\n        this.state.startDate = moment('' + newDate).startOf('week').format('YYYY-MM-DD');\r\n        this.state.endDate = moment('' + newDate).endOf('month').format('YYYY-MM-DD');\r\n        console.log('weeksaaaa:', this.state.startDate, this.state.endDate);\r\n        while (this.state.startDate <= this.state.endDate) {\r\n            weeks.push(<Dropdown.Item onSelect={(event) => this.selectedWeek(event)}\r\n                eventKey={this.state.startDate}>{this.state.startDate}</Dropdown.Item >);\r\n            this.state.startDate = moment(this.state.startDate).add(7, 'days').format('YYYY-MM-DD');\r\n        }\r\n        console.log(weeks)\r\n        this.setState({\r\n            weekObj: weeks\r\n        });\r\n    }\r\n    selectedWeek = function (week) {\r\n        console.log('ll', week, this.state.columns, moment(week).week());\r\n\r\n        this.setState({\r\n            selectedWeek: moment(week).week()\r\n        });\r\n        let respose = [];\r\n        let emptyRow = {\r\n            \"Sunday\": \"0\",\r\n            \"Monday\": \"0\",\r\n            \"Tuesday\": \"0\",\r\n            \"Wednesday\": \"0\",\r\n            \"Thursday\": \"0\",\r\n            \"Friday\": \"0\",\r\n            \"Saturday\": \"0\",\r\n        };\r\n        let data = week;\r\n        let i = 1;\r\n        let days = [{\r\n            \"Sunday\": \"\",\r\n            \"Monday\": \"\",\r\n            \"Tuesday\": \"\",\r\n            \"Wednesday\": \"\",\r\n            \"Thursday\": \"\",\r\n            \"Friday\": \"\",\r\n            \"Saturday\": \"\",\r\n        }];\r\n        days[0]['Sunday'] = data;\r\n        respose.push(data);\r\n        let dynamicColumns = [];\r\n\r\n        //days.push(data);\r\n        // row.dataField = ''+data;\r\n        // row.text = ''+data; \r\n        // this.state.columns[0] = row;\r\n        while (i <= 6) {\r\n            let c = 1\r\n            let dateString = moment(data).add(1, 'days').format('YYYY-MM-DD');\r\n            let dayString = moment(data).add(1, 'days').format('dddd');\r\n            respose.push(dateString);\r\n            days[0][dayString] = dateString;\r\n            console.log(days);\r\n            // row.dataField = ''+daysString;\r\n            // row.text = ''+daysString; \r\n            // this.state.columns[c] = row;\r\n            data = moment(data).add(1, 'days').format('YYYY-MM-DD');\r\n            i++;\r\n            c++;\r\n\r\n        }\r\n        days[1] = emptyRow;\r\n\r\n        console.log('hehe11', days);\r\n\r\n        console.log('hehe', dynamicColumns);\r\n        this.setState({\r\n            products: days\r\n        });\r\n\r\n        // console.log('days', days, this.state.dayObj);\r\n    }\r\n    handleSelect = (e) => {\r\n        console.log(e);\r\n        // setValue(e) \r\n    }\r\n    onKeyUpValue = (e) => {\r\n        console.log(\"ee\", e)\r\n        if (e.key === 'Enter') {\r\n            console.log('do validate', e);\r\n        }\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ value: e.target.value });\r\n    }\r\n\r\n    keyPress(e, d) {\r\n        console.log(e, d)\r\n        if (e.keyCode == 13) {\r\n            console.log('value', e.target.value);\r\n            // put the login here\r\n        }\r\n    }\r\n\r\n    inputTextEditor(productKey, props, field) {\r\n        return <InputText type=\"text\" value={props.rowData[field]} onChange={(e) => this.onEditorValueChange(productKey, props, e.target.value)} />;\r\n    }\r\n    codeEditor(productKey, props) {\r\n        console.log('code editor', productKey, props);\r\n        return this.inputTextEditor(productKey, props, 'code');\r\n    }\r\n    onEditorValueChange(productKey, props, value) {\r\n        let updatedProducts = [...props.value];\r\n        console.log('updatedProducts', updatedProducts, props);\r\n        updatedProducts[props.rowIndex][props.field] = value;\r\n        this.setState({ [`${productKey}`]: updatedProducts });\r\n        console.log('as', this.state.products);\r\n    }\r\n\r\n    onSubmit = e => {\r\n        const email = localStorage.getItem(\"userEmail\");\r\n        const data = {};\r\n        Object.keys(this.state.products[0]).forEach(element => {\r\n            let date = this.state.products[0][element];\r\n            data[date] = this.state.products[1][element];\r\n        });\r\n        let userData = {\r\n            data: data,\r\n            email: email,\r\n            selectedWeek: this.state.selectedWeek\r\n        }\r\n\r\n        const res = this.props.submit(userData);\r\n     \r\n\r\n    }\r\n    onLoad = e => {\r\n        const email = localStorage.getItem(\"userEmail\");\r\n        \r\n        let userData = {\r\n            email: email,\r\n            selectedWeek: this.state.selectedWeek\r\n        }\r\n\r\n        this.props.weekData(userData);\r\n      \r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"demoTimesheet\" >\r\n                <Dropdown className=\"margin15\">\r\n                    <Dropdown.Toggle variant=\"success\"\r\n                        id=\"select-month\" > Select Month\r\n            </Dropdown.Toggle>\r\n                    <Dropdown.Menu > {\r\n                        this.state.optionItems\r\n                    } </Dropdown.Menu>\r\n                </Dropdown>\r\n                <Dropdown className=\"margin15\">\r\n                    <Dropdown.Toggle variant=\"success\"\r\n                        id=\"select-week\" > Select Week\r\n            </Dropdown.Toggle >\r\n                    <Dropdown.Menu> {\r\n                        this.state.weekObj\r\n                    } </Dropdown.Menu> </Dropdown >\r\n\r\n                <Button variant=\"primary\" className=\"margin15\" onClick={this.onLoad}>Load</Button>\r\n                <Button variant=\"primary\" className=\"margin15\" onClick={this.onSubmit}>Submit</Button>\r\n                <span>Selected week - {this.state.selectedWeek}</span>\r\n\r\n                <div className=\"card margin15\">\r\n                    <DataTable value={this.state.products} editMode=\"cell\" className=\"editable-cells-table \" >\r\n                        <Column field=\"Sunday\" header=\"Sunday\"></Column>\r\n                        <Column field=\"Monday\" header=\"Monday\" editor={(props) => this.codeEditor('products', props)}></Column>\r\n                        <Column field=\"Tuesday\" header=\"Tuesday\" editor={(props) => this.codeEditor('products', props)}></Column>\r\n                        <Column field=\"Wednesday\" header=\"Wednesday\" editor={(props) => this.codeEditor('products', props)}></Column>\r\n                        <Column field=\"Thursday\" header=\"Thursday\" editor={(props) => this.codeEditor('products', props)}></Column>\r\n                        <Column field=\"Friday\" header=\"Friday\" editor={(props) => this.codeEditor('products', props)}></Column>\r\n                        <Column field=\"Saturday\" header=\"Saturday\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\ndemoTimesheet.propTypes = {\r\n    weekData: PropTypes.func.isRequired,\r\n    submit: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired // TODO - made its as string from object\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nconsole.log(mapStateToProps)\r\nexport default connect(\r\n    mapStateToProps,\r\n    { weekData,submit }\r\n)(withRouter(demoTimesheet));\r\n// export default demoTimesheet;\r\n"]},"metadata":{},"sourceType":"module"}