{"ast":null,"code":"var _jsxFileName = \"D:\\\\swathi folder\\\\mern-auth-with-frontend\\\\mern-auth\\\\client\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\";\nimport React, { Component } from \"react\";\nimport moment from 'moment';\nimport Moment from 'react-moment';\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\"; // calender import\n\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from '@fullcalendar/interaction';\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onLogoutClick = e => {\n      e.preventDefault();\n      this.props.logoutUser();\n    };\n\n    this.handleEventClick = ({\n      event\n    }) => {\n      console.log(event); // openAppointment is a function I wrote to open a form to edit that appointment\n\n      console.log('kkk');\n    };\n\n    this.handleDateSelect = selectInfo => {\n      let title = prompt('Please enter a new title for your event');\n      let calendarApi = selectInfo.view.calendar;\n      calendarApi.unselect(); // clear date selection\n\n      if (title) {\n        calendarApi.addEvent({\n          id: createEventId(),\n          title,\n          start: selectInfo.startStr,\n          end: selectInfo.endStr,\n          allDay: selectInfo.allDay\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      user\n    } = this.props.auth;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"timesheet-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, user.name.split(\" \")[0], \"! Here is your time sheet space\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.onLogoutClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, \"Logout\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calender-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FullCalendar, {\n      defaultView: \"dayGridMonth\",\n      plugins: [dayGridPlugin, interactionPlugin],\n      editable: true,\n      dateClick: this.handleEventClick,\n      select: this.handleDateSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  logoutUser\n})(Dashboard);","map":{"version":3,"sources":["D:/swathi folder/mern-auth-with-frontend/mern-auth/client/src/components/dashboard/Dashboard.js"],"names":["React","Component","moment","Moment","PropTypes","Button","connect","logoutUser","FullCalendar","dayGridPlugin","interactionPlugin","Dashboard","onLogoutClick","e","preventDefault","props","handleEventClick","event","console","log","handleDateSelect","selectInfo","title","prompt","calendarApi","view","calendar","unselect","addEvent","id","createEventId","start","startStr","end","endStr","allDay","render","user","auth","name","split","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,2BAA3B,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;;AAGA,MAAMC,SAAN,SAAwBV,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAChCW,aADgC,GAChBC,CAAC,IAAI;AACnBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,KAAL,CAAWR,UAAX;AACD,KAJ+B;;AAAA,SAOhCS,gBAPgC,GAOd,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAa;AAE7BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAF6B,CAG7B;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACH,KAZiC;;AAAA,SAclCC,gBAdkC,GAcdC,UAAD,IAA+B;AAChD,UAAIC,KAAK,GAAGC,MAAM,CAAC,yCAAD,CAAlB;AACA,UAAIC,WAAW,GAAGH,UAAU,CAACI,IAAX,CAAgBC,QAAlC;AAEAF,MAAAA,WAAW,CAACG,QAAZ,GAJgD,CAIzB;;AAEvB,UAAIL,KAAJ,EAAW;AACTE,QAAAA,WAAW,CAACI,QAAZ,CAAqB;AACnBC,UAAAA,EAAE,EAAEC,aAAa,EADE;AAEnBR,UAAAA,KAFmB;AAGnBS,UAAAA,KAAK,EAAEV,UAAU,CAACW,QAHC;AAInBC,UAAAA,GAAG,EAAEZ,UAAU,CAACa,MAJG;AAKnBC,UAAAA,MAAM,EAAEd,UAAU,CAACc;AALA,SAArB;AAOD;AACF,KA7BiC;AAAA;;AA8BhCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKtB,KAAL,CAAWuB,IAA5B;AAIA,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IAAI,CAACE,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CADH,oCAFF,eAME,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAE,KAAK5B,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAUE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AACE,MAAA,WAAW,EAAC,cADd;AAEE,MAAA,OAAO,EAAE,CAACH,aAAD,EAAgBC,iBAAhB,CAFX;AAGE,MAAA,QAAQ,EAAE,IAHZ;AAIE,MAAA,SAAS,EAAG,KAAKM,gBAJnB;AAKE,MAAA,MAAM,EAAE,KAAKI,gBALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAVF,CADF;AA8BD;;AAjE+B;;AAmElCT,SAAS,CAAC8B,SAAV,GAAsB;AACpBlC,EAAAA,UAAU,EAAEH,SAAS,CAACsC,IAAV,CAAeC,UADP;AAEpBL,EAAAA,IAAI,EAAElC,SAAS,CAACwC,MAAV,CAAiBD;AAFH,CAAtB;;AAIA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCR,EAAAA,IAAI,EAAEQ,KAAK,CAACR;AADoB,CAAL,CAA7B;;AAGA,eAAehC,OAAO,CACpBuC,eADoB,EAEpB;AAAEtC,EAAAA;AAAF,CAFoB,CAAP,CAGbI,SAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport moment from 'moment';\r\nimport Moment from 'react-moment';\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\n\r\n// calender import\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport interactionPlugin from '@fullcalendar/interaction'\r\n\r\n\r\nclass Dashboard extends Component {\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n\r\n\r\n  handleEventClick= ({event}) => {\r\n\r\n    console.log(event)\r\n    // openAppointment is a function I wrote to open a form to edit that appointment\r\n    console.log('kkk');\r\n}\r\n\r\nhandleDateSelect = (selectInfo: DateSelectArg) => {\r\n  let title = prompt('Please enter a new title for your event')\r\n  let calendarApi = selectInfo.view.calendar\r\n\r\n  calendarApi.unselect() // clear date selection\r\n\r\n  if (title) {\r\n    calendarApi.addEvent({\r\n      id: createEventId(),\r\n      title,\r\n      start: selectInfo.startStr,\r\n      end: selectInfo.endStr,\r\n      allDay: selectInfo.allDay\r\n    })\r\n  }\r\n}\r\n  render() {\r\n    const { user } = this.props.auth;\r\n\r\n\r\n\r\n    return (\r\n      <div className=\"timesheet-page\" >\r\n\r\n        <h4>\r\n          {user.name.split(\" \")[0]}!\r\n              Here is your time sheet space\r\n            </h4>\r\n        <Button variant=\"primary\" onClick={this.onLogoutClick}>Logout</Button>\r\n\r\n        {/* timesheet section */}\r\n\r\n        <div className=\"calender-section\">\r\n          <FullCalendar\r\n            defaultView=\"dayGridMonth\"\r\n            plugins={[dayGridPlugin, interactionPlugin]}\r\n            editable={true}\r\n            dateClick ={this.handleEventClick}\r\n            select={this.handleDateSelect}\r\n\r\n          />\r\n        </div>\r\n\r\n\r\n\r\n        {/* \r\n                    eventDrop={this.handleEventDrop}\r\n                    eventClick={this.handleEventClick}\r\n                    events={this.formatEvents()} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nDashboard.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser }\r\n)(Dashboard);"]},"metadata":{},"sourceType":"module"}